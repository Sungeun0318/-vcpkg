@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# sync with portfile.cmake and onnxruntime_vcpkg_deps.cmake ...
find_dependency(absl REQUIRED)
find_dependency(re2 REQUIRED)
if(@onnxruntime_BUILD_UNIT_TESTS@)
  find_dependency(GTest REQUIRED)
endif()
if(@onnxruntime_BUILD_BENCHMARKS@)
  find_dependency(benchmark REQUIRED)
endif()
find_dependency(flatbuffers REQUIRED)
find_dependency(Protobuf REQUIRED)

find_dependency(date REQUIRED)
find_dependency(Boost REQUIRED)
find_dependency(nlohmann_json REQUIRED)
if(@onnxruntime_ENABLE_CPUINFO@)
  find_dependency(cpuinfo REQUIRED)
endif()
if(NOT WIN32)
  find_dependency(unofficial-nsync REQUIRED)
endif()
find_dependency(Microsoft.GSL REQUIRED)
find_dependency(ONNX REQUIRED)
find_dependency(Eigen3 REQUIRED)
find_dependency(wil REQUIRED)
if(@onnxruntime_USE_XNNPACK@)
  find_dependency(cpuinfo REQUIRED)
endif()
if(@onnxruntime_USE_MIMALLOC@)
  find_dependency(mimalloc REQUIRED)
endif()
if(@onnxruntime_ENABLE_ATEN@)
  find_dependency(dlpack REQUIRED)
endif()
if(@onnxruntime_ENABLE_TRAINING@ OR @onnxruntime_ENABLE_TRAINING_APIS@)
  find_dependency(cxxopts REQUIRED)
endif()
if(@onnxruntime_USE_CUDA@)
  find_dependency(CUDAToolkit REQUIRED)
  find_dependency(NvidiaCutlass REQUIRED)
endif()
if(@onnxruntime_USE_OPENVINO@)
  find_dependency(OpenVINO REQUIRED)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/onnxruntimeTargets.cmake")
